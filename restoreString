from helper import rprint2
from typing import Any, Dict, Iterable, List, Optional, Union

s1 = "codeleet"
s2 = "abc"
s3 = "aiohn"
s4 = "aaiougrt"
s5 = "art"
lst1 = [s1, s2, s3, s4, s5]
indices1 = [4,5,6,7,0,2,1,3]
indices2 = [0,1,2]
indices3 = [3,1,4,2,0]
indices4 = [4,0,2,6,7,3,1,5]
indices5 = [1,0,2]
lst2 = [indices1, indices2, indices3, indices4, indices5]
output1 = "leetcode"
output2 = "abc"
output3 = "nihao"
output4 = "arigatou"
output5 = "rat"
outputs = [output1, output2, output3, output4, output5]

class Solution:
    def restoreString(self, s: str, indices: List[int]) -> str:
        output = ""
        for index in range(len(indices)):
            output += s[indices.index(index)]
        return output


rprint2(Solution().restoreString, lst1, lst2, outputs)
